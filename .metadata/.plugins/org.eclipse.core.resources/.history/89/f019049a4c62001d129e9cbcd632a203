import java.util.function.BiFunction;
import java.util.function.BiPredicate;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;

public class Java8FunctionalInterfaces {
	public static void main(String[] args) {
		
		Predicate<Integer> predicate= e -> e==2;
		BiPredicate<Integer,String> biPredicate= (e , s)-> (e==2 && s.length()==2);
		
		Consumer<String> consume=e->System.out.println(e);
		
		Function<Integer,String> func= e -> {
												if(e==2)
												return "Two";
												return "invalid input";
											};
											
		BiFunction<Integer,String,String> bifunc= (e,s) -> {
												if(e==2&&s.length()==2)
												return "Two";
												return "invalid input";
											};
											
}
}
